buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M5'
    }
}

repositories {
    mavenCentral()
}

ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '5.3.1'
ext.junitPlatformVersion = '1.3.1'
ext.junitJupiterVersion  = '5.3.1'
ext.mockitoVersion       = '2.23.0'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.junit.platform.gradle.plugin'

jar {
    baseName = 'java'
    version = '1.0.0'
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}

junitPlatform {
    platformVersion '1.0.2'
    filters {
        engines {
            include 'junit-jupiter', 'junit-vintage'
            // exclude 'custom-engine'
        }
        tags {
            // include 'fast'
            exclude 'slow'
        }
        // includeClassNamePattern '.*Test'
    }
    enableStandardTestTask true
    reportsDir file('build/test-results/junit-platform')
}

dependencies {
    // JUnit Jupiter API and TestEngine implementation
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")

    // Mockito
    testCompile("org.mockito:mockito-core:${mockitoVersion}")

    // If you also want to support JUnit 3 and JUnit 4 tests
    // testCompile("junit:junit:${junit4Version}")
    // testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '4.10.2'
}